/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 8000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 16000.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("control_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("off_serviece")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("on_serviece")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("off_power_serviece")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("B3_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("B4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("B4_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bas_data_TX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("C4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("C4_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D5_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Splitter:inst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Receiver:inst1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("RW_Block:inst2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("DeMUX:inst3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Transmitter:inst4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("KY1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("KY2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("KY3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("KY7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Splitter:inst|addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|addr";
}

SIGNAL("Splitter:inst|addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|addr";
}

SIGNAL("Splitter:inst|addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|addr";
}

SIGNAL("Splitter:inst|addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|addr";
}

SIGNAL("Splitter:inst|addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|addr";
}

SIGNAL("Splitter:inst|addr~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|addr~1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|addr~2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|addr~3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|addr~4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_data";
}

SIGNAL("Splitter:inst|bas_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_data";
}

SIGNAL("Splitter:inst|bas_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_data";
}

SIGNAL("Splitter:inst|bas_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_data";
}

SIGNAL("Splitter:inst|bas_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_data";
}

SIGNAL("Splitter:inst|bas_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_data";
}

SIGNAL("Splitter:inst|bas_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_data";
}

SIGNAL("Splitter:inst|bas_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_data";
}

SIGNAL("Splitter:inst|bas_data~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data~1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data~2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data~3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data~4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data~5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data~6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_data~7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_words")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|bas_words[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|bas_words[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "Splitter:inst|bas_words";
}

SIGNAL("Splitter:inst|D4_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|D4_bit~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|on_off")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|on_off~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|rd_wd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|rd_wd~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Splitter:inst|reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|Add0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_signal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_signal[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_signal";
}

SIGNAL("Receiver:inst1|bas_signal[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_signal";
}

SIGNAL("Receiver:inst1|bas_signal[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_signal";
}

SIGNAL("Receiver:inst1|bas_signal[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_signal";
}

SIGNAL("Receiver:inst1|bas_words")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Receiver:inst1|bas_words";
}

SIGNAL("Receiver:inst1|bas_words[0]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[1]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[2]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[3]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[4]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[5]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[6]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[7]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[8]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[9]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[10]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[11]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[12]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[13]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[14]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[15]~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words[15]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~8")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~9")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~10")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~11")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~12")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~13")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~14")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~15")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~16")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~17")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~18")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~19")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~20")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~21")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~22")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~23")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~24")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~25")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~26")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~27")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~28")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~29")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~30")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~31")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~32")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~33")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~34")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~35")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~36")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~37")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~38")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~39")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~40")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~41")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~42")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~43")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~44")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~45")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~46")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~47")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~48")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~49")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~51")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~52")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~53")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~54")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~55")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~56")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~57")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~58")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~59")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~60")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~61")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~62")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~63")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|bas_words~64")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|control_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|Decoder0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|LessThan0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|overclock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Receiver:inst1|overclock~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Receiver:inst1|reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("RW_Block:inst2|en_MEM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("RW_Block:inst2|en_MEM~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("RW_Block:inst2|en_TX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("RW_Block:inst2|en_TX~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("RW_Block:inst2|rd_wd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("RW_Block:inst2|reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|D4_bit_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|en_KY")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|en_KY~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|en_KY~1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|en_MEM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|en_PK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|en_PK~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|en_PK~1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("DeMUX:inst3|reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|Add0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|bas_data_TX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|bas_data_TX~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|bas_data_TX~1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|bas_data_TX~2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|bas_data_TX~3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|bas_data_TX~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|bas_signal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|bas_signal[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Transmitter:inst4|bas_signal";
}

SIGNAL("Transmitter:inst4|bas_signal[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Transmitter:inst4|bas_signal";
}

SIGNAL("Transmitter:inst4|bas_signal[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Transmitter:inst4|bas_signal";
}

SIGNAL("Transmitter:inst4|bas_signal[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Transmitter:inst4|bas_signal";
}

SIGNAL("Transmitter:inst4|clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|control_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|en_TX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|LessThan0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|Mux0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|off_power_serviece")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|off_serviece")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|on_serviece")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|overclock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|overclock~0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|overclock~1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Transmitter:inst4|reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|bas_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|bas_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|bas_data";
}

SIGNAL("KY_Block:inst11|bas_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|bas_data";
}

SIGNAL("KY_Block:inst11|bas_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|bas_data";
}

SIGNAL("KY_Block:inst11|bas_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|bas_data";
}

SIGNAL("KY_Block:inst11|bas_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|bas_data";
}

SIGNAL("KY_Block:inst11|bas_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|bas_data";
}

SIGNAL("KY_Block:inst11|bas_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|bas_data";
}

SIGNAL("KY_Block:inst11|bas_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|bas_data";
}

SIGNAL("KY_Block:inst11|clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|en_KY")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|KY1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|KY1~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|KY2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|KY2~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|KY3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|KY3~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|KY7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|KY7~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|Mux0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|Mux1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|Mux2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|Mux3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|on_off")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|sub_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("KY_Block:inst11|sub_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|sub_data";
}

SIGNAL("KY_Block:inst11|sub_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|sub_data";
}

SIGNAL("KY_Block:inst11|sub_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|sub_data";
}

SIGNAL("KY_Block:inst11|sub_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "KY_Block:inst11|sub_data";
}

SIGNAL("PK_Block:inst12|bas_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|bas_addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_addr";
}

SIGNAL("PK_Block:inst12|bas_addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_addr";
}

SIGNAL("PK_Block:inst12|bas_addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_addr";
}

SIGNAL("PK_Block:inst12|bas_addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_addr";
}

SIGNAL("PK_Block:inst12|bas_addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_addr";
}

SIGNAL("PK_Block:inst12|bas_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|bas_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_data";
}

SIGNAL("PK_Block:inst12|bas_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_data";
}

SIGNAL("PK_Block:inst12|bas_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_data";
}

SIGNAL("PK_Block:inst12|bas_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_data";
}

SIGNAL("PK_Block:inst12|bas_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_data";
}

SIGNAL("PK_Block:inst12|bas_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_data";
}

SIGNAL("PK_Block:inst12|bas_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_data";
}

SIGNAL("PK_Block:inst12|bas_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|bas_data";
}

SIGNAL("PK_Block:inst12|clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|en_PK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux8")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux9")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux10")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux11")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux12")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux13")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux14")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|Mux15")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|on_off")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutB3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutB3_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutB3_2~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutB3~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutB4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutB4_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutB4_2~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutB4~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutC4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutC4_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutC4_2~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutC4~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutD5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutD5_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutD5_2~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|PowerOutD5~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|sub_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|sub_addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_addr";
}

SIGNAL("PK_Block:inst12|sub_addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_addr";
}

SIGNAL("PK_Block:inst12|sub_addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_addr";
}

SIGNAL("PK_Block:inst12|sub_addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_addr";
}

SIGNAL("PK_Block:inst12|sub_addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_addr";
}

SIGNAL("PK_Block:inst12|sub_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("PK_Block:inst12|sub_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_data";
}

SIGNAL("PK_Block:inst12|sub_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_data";
}

SIGNAL("PK_Block:inst12|sub_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_data";
}

SIGNAL("PK_Block:inst12|sub_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_data";
}

SIGNAL("PK_Block:inst12|sub_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_data";
}

SIGNAL("PK_Block:inst12|sub_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_data";
}

SIGNAL("PK_Block:inst12|sub_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_data";
}

SIGNAL("PK_Block:inst12|sub_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "PK_Block:inst12|sub_data";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 97000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 376000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 312000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 504000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 312000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 536000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 312000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 648000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 312000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 56000.0;
		LEVEL 1 FOR 8000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 1927000.0;
	}
}

TRANSITION_LIST("control_bit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 480000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 416000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 608000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 416000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 640000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 416000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 752000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 416000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 1888000.0;
	}
}

TRANSITION_LIST("data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 96000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 96000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 368000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 304000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 496000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 304000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 528000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 304000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 640000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 304000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 48000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 1920000.0;
	}
}

TRANSITION_LIST("off_serviece")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000000.0;
	}
}

TRANSITION_LIST("on_serviece")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 224000.0;
		LEVEL 0 FOR 7776000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000000.0;
	}
}

TRANSITION_LIST("off_power_serviece")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000000.0;
	}
}

TRANSITION_LIST("B3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("B3_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("B4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("B4_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("bas_data_TX")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("C4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("C4_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("D5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("D5_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("RW_Block:inst2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("KY2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("KY3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("KY7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr~1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr~2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr~3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|addr~4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data~1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data~2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data~3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data~4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data~5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data~6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_data~7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|bas_words[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|D4_bit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|D4_bit~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|on_off")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|on_off~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|rd_wd")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|rd_wd~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Splitter:inst|reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|Add0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_signal[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_signal[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_signal[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_signal[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[0]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[1]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[2]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[3]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[4]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[5]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[6]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[7]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[8]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[9]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[10]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[11]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[12]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[13]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[14]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[15]~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words[15]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~8")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~9")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~10")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~11")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~12")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~13")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~14")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~15")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~16")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~17")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~18")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~19")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~20")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~21")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~22")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~23")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~24")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~25")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~26")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~27")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~28")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~29")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~30")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~31")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~32")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~33")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~34")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~35")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~36")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~37")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~38")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~39")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~40")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~41")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~42")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~43")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~44")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~45")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~46")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~47")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~48")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~49")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~50")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~51")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~52")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~53")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~54")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~55")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~56")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~57")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~58")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~59")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~60")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~61")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~62")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~63")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|bas_words~64")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|control_bit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|Decoder0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|LessThan0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|overclock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|overclock~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Receiver:inst1|reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("RW_Block:inst2|en_MEM")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("RW_Block:inst2|en_MEM~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("RW_Block:inst2|en_TX")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("RW_Block:inst2|en_TX~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("RW_Block:inst2|rd_wd")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("RW_Block:inst2|reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|D4_bit_in")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|en_KY")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|en_KY~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|en_KY~1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|en_MEM")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|en_PK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|en_PK~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|en_PK~1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("DeMUX:inst3|reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|Add0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_data_TX")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_data_TX~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_data_TX~1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_data_TX~2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_data_TX~3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_data_TX~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_signal[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_signal[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_signal[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|bas_signal[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|control_bit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|en_TX")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|LessThan0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|Mux0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|off_power_serviece")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|off_serviece")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|on_serviece")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|overclock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|overclock~0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|overclock~1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("Transmitter:inst4|reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|bas_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|bas_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|bas_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|bas_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|bas_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|bas_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|bas_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|bas_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|en_KY")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|KY1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|KY1~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|KY2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|KY2~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|KY3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|KY3~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|KY7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|KY7~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|Mux0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|Mux1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|Mux2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|Mux3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|on_off")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|sub_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|sub_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|sub_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("KY_Block:inst11|sub_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_addr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_addr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_addr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|bas_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|en_PK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux8")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux9")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux10")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux11")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux12")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux13")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux14")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|Mux15")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|on_off")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutB3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutB3_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutB3_2~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutB3~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutB4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutB4_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutB4_2~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutB4~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutC4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutC4_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutC4_2~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutC4~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutD5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutD5_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutD5_2~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|PowerOutD5~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_addr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_addr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_addr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

TRANSITION_LIST("PK_Block:inst12|sub_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 8000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "control_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "off_power_serviece";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "off_serviece";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "on_serviece";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B3_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B4_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bas_data_TX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "C4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "C4_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D5_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RW_Block:inst2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr~1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr~2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr~3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|addr~4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data~1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data~2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data~3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data~4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data~5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data~6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_data~7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|bas_words[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|D4_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|D4_bit~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|on_off";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 74;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|on_off~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 75;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|rd_wd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|rd_wd~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 77;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Splitter:inst|reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 78;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|Add0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 79;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_signal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 80;
	TREE_LEVEL = 0;
	CHILDREN = 81, 82, 83, 84;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_signal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_signal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_signal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_signal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
	CHILDREN = 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[0]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 102;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[1]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 103;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[2]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[3]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 105;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[4]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 106;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[5]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 107;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[6]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 108;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[7]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 109;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[8]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 110;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[9]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 111;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[10]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 112;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[11]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 113;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[12]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 114;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[13]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 115;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[14]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 116;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[15]~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 117;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words[15]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 118;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 119;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 120;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 121;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 122;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 123;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 124;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 125;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~8";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 126;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~9";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 127;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~10";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 128;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~11";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 129;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~12";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 130;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~13";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 131;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~14";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 132;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~15";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 133;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~16";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 134;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~17";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 135;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~18";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 136;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~19";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~20";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 138;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~21";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 139;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~22";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 140;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~23";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 141;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~24";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 142;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~25";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 143;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~26";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 144;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~27";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 145;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~28";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 146;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~29";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 147;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~30";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 148;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~31";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 149;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~32";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 150;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~33";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 151;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~34";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 152;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~35";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 153;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~36";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 154;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~37";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 155;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~38";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 156;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~39";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 157;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~40";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 158;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~41";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 159;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~42";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 160;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~43";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 161;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~44";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 162;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~45";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 163;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~46";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 164;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~47";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 165;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~48";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 166;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~49";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 167;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 168;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~51";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 169;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~52";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 170;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~53";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 171;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~54";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 172;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~55";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 173;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~56";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 174;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~57";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 175;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~58";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 176;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~59";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 177;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~60";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 178;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~61";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 179;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~62";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 180;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~63";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 181;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|bas_words~64";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 182;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 183;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|control_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 184;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 185;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|Decoder0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 186;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|LessThan0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 187;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|overclock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 188;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|overclock~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 189;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Receiver:inst1|reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 190;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RW_Block:inst2|en_MEM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 191;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RW_Block:inst2|en_MEM~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 192;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RW_Block:inst2|en_TX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 193;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RW_Block:inst2|en_TX~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 194;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RW_Block:inst2|rd_wd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 195;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RW_Block:inst2|reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 196;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|D4_bit_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 197;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|en_KY";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 198;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|en_KY~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 199;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|en_KY~1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 200;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|en_MEM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 201;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|en_PK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 202;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|en_PK~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 203;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|en_PK~1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 204;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DeMUX:inst3|reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 205;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|Add0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 206;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_data_TX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 207;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_data_TX~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 208;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_data_TX~1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 209;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_data_TX~2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 210;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_data_TX~3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 211;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_data_TX~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 212;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_signal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 213;
	TREE_LEVEL = 0;
	CHILDREN = 214, 215, 216, 217;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_signal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 213;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_signal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 213;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_signal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 213;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|bas_signal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 213;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 218;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|control_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 219;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|en_TX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 220;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|LessThan0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 221;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|Mux0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 222;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|off_power_serviece";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 223;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|off_serviece";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 224;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|on_serviece";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 225;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|overclock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 226;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|overclock~0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 227;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|overclock~1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 228;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transmitter:inst4|reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 229;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 230;
	TREE_LEVEL = 0;
	CHILDREN = 231, 232, 233, 234, 235, 236, 237, 238;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 231;
	TREE_LEVEL = 1;
	PARENT = 230;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 232;
	TREE_LEVEL = 1;
	PARENT = 230;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 233;
	TREE_LEVEL = 1;
	PARENT = 230;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 234;
	TREE_LEVEL = 1;
	PARENT = 230;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 235;
	TREE_LEVEL = 1;
	PARENT = 230;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 236;
	TREE_LEVEL = 1;
	PARENT = 230;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 237;
	TREE_LEVEL = 1;
	PARENT = 230;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|bas_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 238;
	TREE_LEVEL = 1;
	PARENT = 230;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 239;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|en_KY";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 240;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|KY1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 241;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|KY1~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 242;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|KY2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 243;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|KY2~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 244;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|KY3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 245;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|KY3~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 246;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|KY7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 247;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|KY7~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 248;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|Mux0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 249;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|Mux1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 250;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|Mux2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 251;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|Mux3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 252;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|on_off";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 253;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 254;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|sub_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 255;
	TREE_LEVEL = 0;
	CHILDREN = 256, 257, 258, 259;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|sub_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 256;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|sub_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 257;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|sub_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 258;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "KY_Block:inst11|sub_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 259;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 260;
	TREE_LEVEL = 0;
	CHILDREN = 261, 262, 263, 264, 265;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 261;
	TREE_LEVEL = 1;
	PARENT = 260;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 262;
	TREE_LEVEL = 1;
	PARENT = 260;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 263;
	TREE_LEVEL = 1;
	PARENT = 260;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 264;
	TREE_LEVEL = 1;
	PARENT = 260;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 265;
	TREE_LEVEL = 1;
	PARENT = 260;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 266;
	TREE_LEVEL = 0;
	CHILDREN = 267, 268, 269, 270, 271, 272, 273, 274;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 267;
	TREE_LEVEL = 1;
	PARENT = 266;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 268;
	TREE_LEVEL = 1;
	PARENT = 266;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 269;
	TREE_LEVEL = 1;
	PARENT = 266;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 270;
	TREE_LEVEL = 1;
	PARENT = 266;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 271;
	TREE_LEVEL = 1;
	PARENT = 266;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 272;
	TREE_LEVEL = 1;
	PARENT = 266;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 273;
	TREE_LEVEL = 1;
	PARENT = 266;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|bas_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 274;
	TREE_LEVEL = 1;
	PARENT = 266;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 275;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|en_PK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 276;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 277;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 278;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 279;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 280;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 281;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 282;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 283;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 284;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux8";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 285;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux9";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 286;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux10";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 287;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux11";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 288;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux12";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 289;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux13";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 290;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux14";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 291;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|Mux15";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 292;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|on_off";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 293;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutB3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 294;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutB3_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 295;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutB3_2~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 296;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutB3~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 297;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutB4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 298;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutB4_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 299;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutB4_2~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 300;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutB4~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 301;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutC4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 302;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutC4_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 303;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutC4_2~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 304;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutC4~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 305;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutD5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 306;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutD5_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 307;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutD5_2~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 308;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|PowerOutD5~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 309;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 310;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 311;
	TREE_LEVEL = 0;
	CHILDREN = 312, 313, 314, 315, 316;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 312;
	TREE_LEVEL = 1;
	PARENT = 311;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 313;
	TREE_LEVEL = 1;
	PARENT = 311;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 314;
	TREE_LEVEL = 1;
	PARENT = 311;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 315;
	TREE_LEVEL = 1;
	PARENT = 311;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 316;
	TREE_LEVEL = 1;
	PARENT = 311;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 317;
	TREE_LEVEL = 0;
	CHILDREN = 318, 319, 320, 321, 322, 323, 324, 325;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 318;
	TREE_LEVEL = 1;
	PARENT = 317;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 319;
	TREE_LEVEL = 1;
	PARENT = 317;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 320;
	TREE_LEVEL = 1;
	PARENT = 317;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 321;
	TREE_LEVEL = 1;
	PARENT = 317;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 322;
	TREE_LEVEL = 1;
	PARENT = 317;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 323;
	TREE_LEVEL = 1;
	PARENT = 317;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 324;
	TREE_LEVEL = 1;
	PARENT = 317;
}

DISPLAY_LINE
{
	CHANNEL = "PK_Block:inst12|sub_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 325;
	TREE_LEVEL = 1;
	PARENT = 317;
}

TIME_BAR
{
	TIME = 160000000;
	MASTER = TRUE;
}
;
